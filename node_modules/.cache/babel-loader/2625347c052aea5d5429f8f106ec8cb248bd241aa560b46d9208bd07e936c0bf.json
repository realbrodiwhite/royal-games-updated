{"ast":null,"code":"const apiHandler=async function(url,method){let body=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;try{const options={method,headers:{'Content-Type':'application/json'}};if(body){options.body=JSON.stringify(body);}const response=await fetch(url,options);const data=await response.json();if(!response.ok){console.warn(`${method} request to ${url} failed:`,data.error||data.errors);return{success:false,data};}return{success:true,data};}catch(error){console.error(`Error during ${method} request to ${url}:`,error.message,error.stack);return{success:false,error};}};export{apiHandler};","map":{"version":3,"names":["apiHandler","url","method","body","arguments","length","undefined","options","headers","JSON","stringify","response","fetch","data","json","ok","console","warn","error","errors","success","message","stack"],"sources":["/workspaces/royal-games-updated/src/context/apiHandler.js"],"sourcesContent":["const apiHandler = async (url, method, body = null) => {\r\n  try {\r\n    const options = {\r\n      method,\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n    if (body) {\r\n      options.body = JSON.stringify(body);\r\n    }\r\n    const response = await fetch(url, options);\r\n    const data = await response.json();\r\n    if (!response.ok) {\r\n      console.warn(`${method} request to ${url} failed:`, data.error || data.errors);\r\n      return { success: false, data };\r\n    }\r\n    return { success: true, data };\r\n  } catch (error) {\r\n    console.error(`Error during ${method} request to ${url}:`, error.message, error.stack);\r\n    return { success: false, error };\r\n  }\r\n};\r\n\r\nexport { apiHandler };"],"mappings":"AAAA,KAAM,CAAAA,UAAU,CAAG,cAAAA,CAAOC,GAAG,CAAEC,MAAM,CAAkB,IAAhB,CAAAC,IAAI,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,CAChD,GAAI,CACF,KAAM,CAAAG,OAAO,CAAG,CACdL,MAAM,CACNM,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAChD,CAAC,CACD,GAAIL,IAAI,CAAE,CACRI,OAAO,CAACJ,IAAI,CAAGM,IAAI,CAACC,SAAS,CAACP,IAAI,CAAC,CACrC,CACA,KAAM,CAAAQ,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACX,GAAG,CAAEM,OAAO,CAAC,CAC1C,KAAM,CAAAM,IAAI,CAAG,KAAM,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAClC,GAAI,CAACH,QAAQ,CAACI,EAAE,CAAE,CAChBC,OAAO,CAACC,IAAI,CAAC,GAAGf,MAAM,eAAeD,GAAG,UAAU,CAAEY,IAAI,CAACK,KAAK,EAAIL,IAAI,CAACM,MAAM,CAAC,CAC9E,MAAO,CAAEC,OAAO,CAAE,KAAK,CAAEP,IAAK,CAAC,CACjC,CACA,MAAO,CAAEO,OAAO,CAAE,IAAI,CAAEP,IAAK,CAAC,CAChC,CAAE,MAAOK,KAAK,CAAE,CACdF,OAAO,CAACE,KAAK,CAAC,gBAAgBhB,MAAM,eAAeD,GAAG,GAAG,CAAEiB,KAAK,CAACG,OAAO,CAAEH,KAAK,CAACI,KAAK,CAAC,CACtF,MAAO,CAAEF,OAAO,CAAE,KAAK,CAAEF,KAAM,CAAC,CAClC,CACF,CAAC,CAED,OAASlB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}