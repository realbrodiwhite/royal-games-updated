{"ast":null,"code":"var _jsxFileName = \"/workspaces/royal-games-updated/src/context/userContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport { apiHandler } from './apiHandler';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\nconst UserProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const login = async (username, password) => {\n    const {\n      success,\n      data\n    } = await apiHandler('/api/user/login', 'POST', {\n      username,\n      password\n    });\n    if (success) {\n      setUser(data.user);\n      console.log('User logged in:', data.user);\n    }\n    return {\n      success,\n      data\n    };\n  };\n  const register = async user => {\n    const {\n      success,\n      data\n    } = await apiHandler('/api/user/register', 'POST', user);\n    if (success) {\n      console.log('User registered successfully');\n    }\n    return {\n      success,\n      data\n    };\n  };\n  const updateProfile = async formData => {\n    try {\n      const {\n        success,\n        data\n      } = await apiHandler('/api/user/profile', 'PUT', formData);\n      if (success) {\n        setUser(data);\n        console.log('Profile updated successfully:', data);\n        return {\n          success: true,\n          data\n        };\n      } else {\n        console.warn('Profile update failed:', data.error);\n        return {\n          success: false,\n          data\n        };\n      }\n    } catch (error) {\n      console.error('Error during profile update:', error.message, error.stack);\n      return {\n        success: false,\n        error\n      };\n    }\n  };\n  const resetPassword = async (userId, newPassword) => {\n    const {\n      success,\n      data\n    } = await apiHandler('/api/user/reset-password', 'POST', {\n      userId,\n      newPassword\n    });\n    if (success) {\n      console.log('Password reset successfully for user ID:', userId);\n    }\n    return {\n      success,\n      data\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      login,\n      register,\n      updateProfile,\n      resetPassword\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = UserProvider;\nexport { UserContext, UserProvider };\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","apiHandler","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","user","setUser","login","username","password","success","data","console","log","register","updateProfile","formData","warn","error","message","stack","resetPassword","userId","newPassword","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspaces/royal-games-updated/src/context/userContext.js"],"sourcesContent":["import React, { createContext, useState } from 'react';\r\nimport { apiHandler } from './apiHandler';\r\n\r\nconst UserContext = createContext();\r\n\r\nconst UserProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n\r\n  const login = async (username, password) => {\r\n    const { success, data } = await apiHandler('/api/user/login', 'POST', { username, password });\r\n    if (success) {\r\n      setUser(data.user);\r\n      console.log('User logged in:', data.user);\r\n    }\r\n    return { success, data };\r\n  };\r\n\r\n  const register = async (user) => {\r\n    const { success, data } = await apiHandler('/api/user/register', 'POST', user);\r\n    if (success) {\r\n      console.log('User registered successfully');\r\n    }\r\n    return { success, data };\r\n  };\r\n\r\n  const updateProfile = async (formData) => {\r\n    try {\r\n      const { success, data } = await apiHandler('/api/user/profile', 'PUT', formData);\r\n      if (success) {\r\n        setUser(data);\r\n        console.log('Profile updated successfully:', data);\r\n        return { success: true, data };\r\n      } else {\r\n        console.warn('Profile update failed:', data.error);\r\n        return { success: false, data };\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during profile update:', error.message, error.stack);\r\n      return { success: false, error };\r\n    }\r\n  };\r\n\r\n  const resetPassword = async (userId, newPassword) => {\r\n    const { success, data } = await apiHandler('/api/user/reset-password', 'POST', { userId, newPassword });\r\n    if (success) {\r\n      console.log('Password reset successfully for user ID:', userId);\r\n    }\r\n    return { success, data };\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={{ user, login, register, updateProfile, resetPassword }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport { UserContext, UserProvider };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}