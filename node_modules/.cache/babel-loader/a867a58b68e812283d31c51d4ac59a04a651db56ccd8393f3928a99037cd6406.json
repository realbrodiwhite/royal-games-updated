{"ast":null,"code":"const apiHandler = async (url, method, body = null) => {\n  try {\n    const options = {\n      method,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    if (body) {\n      options.body = JSON.stringify(body);\n    }\n    const response = await fetch(url, options);\n    const data = await response.json();\n    if (!response.ok) {\n      console.warn(`${method} request to ${url} failed:`, data.error || data.errors);\n      return {\n        success: false,\n        data\n      };\n    }\n    return {\n      success: true,\n      data\n    };\n  } catch (error) {\n    console.error(`Error during ${method} request to ${url}:`, error.message, error.stack);\n    return {\n      success: false,\n      error\n    };\n  }\n};\nexport { apiHandler };","map":{"version":3,"names":["apiHandler","url","method","body","options","headers","JSON","stringify","response","fetch","data","json","ok","console","warn","error","errors","success","message","stack"],"sources":["/workspaces/royal-games-updated/src/context/apiHandler.js"],"sourcesContent":["const apiHandler = async (url, method, body = null) => {\r\n  try {\r\n    const options = {\r\n      method,\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n    if (body) {\r\n      options.body = JSON.stringify(body);\r\n    }\r\n    const response = await fetch(url, options);\r\n    const data = await response.json();\r\n    if (!response.ok) {\r\n      console.warn(`${method} request to ${url} failed:`, data.error || data.errors);\r\n      return { success: false, data };\r\n    }\r\n    return { success: true, data };\r\n  } catch (error) {\r\n    console.error(`Error during ${method} request to ${url}:`, error.message, error.stack);\r\n    return { success: false, error };\r\n  }\r\n};\r\n\r\nexport { apiHandler };"],"mappings":"AAAA,MAAMA,UAAU,GAAG,MAAAA,CAAOC,GAAG,EAAEC,MAAM,EAAEC,IAAI,GAAG,IAAI,KAAK;EACrD,IAAI;IACF,MAAMC,OAAO,GAAG;MACdF,MAAM;MACNG,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAChD,CAAC;IACD,IAAIF,IAAI,EAAE;MACRC,OAAO,CAACD,IAAI,GAAGG,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC;IACrC;IACA,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACR,GAAG,EAAEG,OAAO,CAAC;IAC1C,MAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;MAChBC,OAAO,CAACC,IAAI,CAAC,GAAGZ,MAAM,eAAeD,GAAG,UAAU,EAAES,IAAI,CAACK,KAAK,IAAIL,IAAI,CAACM,MAAM,CAAC;MAC9E,OAAO;QAAEC,OAAO,EAAE,KAAK;QAAEP;MAAK,CAAC;IACjC;IACA,OAAO;MAAEO,OAAO,EAAE,IAAI;MAAEP;IAAK,CAAC;EAChC,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,gBAAgBb,MAAM,eAAeD,GAAG,GAAG,EAAEc,KAAK,CAACG,OAAO,EAAEH,KAAK,CAACI,KAAK,CAAC;IACtF,OAAO;MAAEF,OAAO,EAAE,KAAK;MAAEF;IAAM,CAAC;EAClC;AACF,CAAC;AAED,SAASf,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}