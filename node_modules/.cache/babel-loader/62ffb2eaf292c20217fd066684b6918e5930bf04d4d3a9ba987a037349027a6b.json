{"ast":null,"code":"import * as PIXI from 'pixi.js';\nimport ReelsController from './ReelsController';\nimport gsap from 'gsap';\nclass SlotGame {\n  constructor({\n    id,\n    width,\n    height,\n    reelsCount,\n    reelPositions,\n    symbolsCount,\n    hasBlurredSymbols,\n    symbolMargin,\n    maskPaddingX,\n    maskPaddingY,\n    reelsSpeed,\n    spinTime,\n    spinTimeBetweenReels\n  }, socket) {\n    this.onInitFns = [];\n    this.onDestroyFns = [];\n    this.onBalanceChangeFns = [];\n    this.onBetChangeFns = [];\n    this.onCoinValueChangeFns = [];\n    this.onLoadingFns = [];\n    this.onPlayFns = [];\n    this.id = id;\n    this.width = width;\n    this.height = height;\n    this.reelsCount = reelsCount;\n    this.reelPositions = reelPositions;\n    this.symbolsCount = symbolsCount;\n    this.hasBlurredSymbols = hasBlurredSymbols || false;\n    this.symbolMargin = symbolMargin || 0;\n    this.maskPaddingX = maskPaddingX || 0;\n    this.maskPaddingY = maskPaddingY || 0;\n    this.reelsSpeed = reelsSpeed || 0.18;\n    this.spinTime = spinTime;\n    this.spinTimeBetweenReels = spinTimeBetweenReels;\n    this.socket = socket;\n    this.renderer = new PIXI.autoDetectRenderer({\n      width: window.innerWidth,\n      height: window.innerHeight,\n      antialias: true\n    });\n    this.stage = new PIXI.Container();\n    this.ticker = new PIXI.Ticker();\n    this.ticker.add(() => {\n      this.renderer.render(this.stage);\n    });\n    this.assets = [];\n    this.soundAssets = {\n      reelsRun: new Audio(`/data/reels-run.mp3`),\n      reelStop: new Audio(`/data/reel-stop.mp3`),\n      winEffect: new Audio(`/data/win.mp3`),\n      coinsEffect: new Audio(`/data/coins.mp3`)\n    };\n    this.sprites = [];\n    this.texts = [];\n    this._bet = 1;\n    this.coinValueValues = [0.01, 0.03, 0.10, 0.20, 0.50];\n    this._coinValueValueIndex = 0;\n    this._balance = 0;\n    this.autoplay = false;\n    this.creditsTweenCompleted = true;\n  }\n  onInit(fn) {\n    this.onInitFns.push(fn);\n  }\n  onDestroy(fn) {\n    this.onDestroyFns.push(fn);\n  }\n  resize() {\n    const gameRatio = this.width / this.height;\n    const windowRatio = window.innerWidth / window.innerHeight;\n    let width, height;\n    if (windowRatio < gameRatio) {\n      width = window.innerWidth;\n      height = width / gameRatio;\n    } else {\n      height = window.innerHeight;\n      width = height * gameRatio;\n    }\n    this.renderer.resize(width, height);\n    this.stage.scale.x = this.renderer.view.width / this.width;\n    this.stage.scale.y = this.renderer.view.height / this.height;\n  }\n  init() {\n    this.reelsController = new ReelsController(this, this.spinTime, this.spinTimeBetweenReels);\n    this.resize();\n    this.onInitFns.forEach(fn => fn());\n    this.stage.children.sort(function (a, b) {\n      if (a.z > b.z) {\n        return 1;\n      } else {\n        return -1;\n      }\n    });\n    const onWindowResize = () => {\n      setTimeout(() => {\n        this.resize();\n      }, 50);\n    };\n    window.addEventListener('resize', onWindowResize);\n    this.onDestroy(() => {\n      window.removeEventListener('resize', onWindowResize);\n    });\n    this.onNetworkGamestate = state => {\n      this.processGamestate(state);\n    };\n    this.socket.on('gamestate', this.onNetworkGamestate);\n    this.onNetworkBet = data => {\n      this.processBet(data);\n    };\n    this.socket.on('bet', this.onNetworkBet);\n    this.ticker.add(() => {\n      this.texts.forEach(text => {\n        const t = text.text;\n        text.text = '';\n        text.text = t;\n      });\n    });\n    this.ticker.add(() => {\n      if (this.autoplay) {\n        if (!this.reelsController.reelsActive) {\n          if (this.betResponse === null || !this.betResponse.isWin || this.creditsTweenCompleted) {\n            this.play();\n          }\n        }\n      }\n    });\n    this.onActionButtonPressed = e => {\n      if (e.code === 'Space' || e.code === 'Numpad0') {\n        this.play();\n      }\n    };\n    window.addEventListener('keypress', this.onActionButtonPressed);\n  }\n  start() {\n    PIXI.Assets.addBundle(this.id, this.assets);\n    PIXI.Assets.loadBundle(this.id, progress => {\n      this.onLoadingFns.forEach(fn => {\n        fn(progress);\n      });\n    }).then(() => {\n      this.init();\n      this.socket.emit('gamestate', {\n        key: localStorage.getItem('key'),\n        gameId: this.id\n      });\n    });\n  }\n  onLoading(fn) {\n    this.onLoadingFns.push(fn);\n  }\n  play() {\n    if (this.reelsController.reelsActive) {\n      if (this.betResponse) {\n        this.reelsController.onStopCommandFns.forEach(fn => fn());\n        if (this.reelsController.reels.some(r => (r.rolling === true || r.stopping < r.positions + 1) && !(r.forceStopped || r.stoppedAutomatically))) {\n          this.soundAssets.reelsRun.pause();\n          new Audio(this.soundAssets.reelStop.src).play();\n        }\n        this.reelsController.reels.forEach((r, i) => {\n          if ((r.rolling === true || r.stopping < r.positions + 1) && !(r.forceStopped || r.stoppedAutomatically)) {\n            r.values = this.betResponse.reels[i].slice();\n            r.offset = 0;\n            r.stopping = r.positions + 1;\n            r.forceStopped = true;\n          }\n        });\n      }\n      if (!this.reelsController.stopCommandGiven) {\n        this.reelsController.stopCommandGiven = true;\n        this.autoplay = false;\n        for (let i = 0; i < this.onPlayFns.length; i++) {\n          const fn = this.onPlayFns[i];\n          fn();\n          if (fn.once) {\n            this.onPlayFns.splice(i--, 1);\n          }\n        }\n      }\n    } else {\n      this.socket.emit('bet', {\n        key: localStorage.getItem('key'),\n        gameId: this.id,\n        bet: this.bet,\n        coinValue: this.coinValue\n      });\n      this.betResponse = null;\n      this.reelsController.stopCommandGiven = false;\n      this.balance -= Math.round(this.betValue * 100) / 100;\n      this.reelsController.reels.forEach(r => {\n        r.stoppedAutomatically = false;\n        r.forceStopped = false;\n        r.roll();\n        r.onceStop(() => {\n          if (!this.reelsController.reelsActive) {\n            for (let i = 0; i < this.reelsController.onStopFns.length; i++) {\n              const fn = this.reelsController.onStopFns[i];\n              if (fn.once) {\n                this.reelsController.onStopFns.splice(i--, 1);\n              }\n              fn();\n            }\n          }\n          this.soundAssets.reelsRun.pause();\n        });\n      });\n      this.soundAssets.reelsRun.loop = true;\n      this.soundAssets.reelsRun.currentTime = 0;\n      this.soundAssets.reelsRun.play();\n      for (let i = 0; i < this.reelsController.onStartFns.length; i++) {\n        const fn = this.reelsController.onStartFns[i];\n        if (fn.once) {\n          this.reelsController.onStartFns.splice(i--, 1);\n        }\n        fn();\n      }\n      for (let i = 0; i < this.onPlayFns.length; i++) {\n        const fn = this.onPlayFns[i];\n        fn();\n        if (fn.once) {\n          this.onPlayFns.splice(i--, 1);\n        }\n      }\n    }\n  }\n  onPlay(fn) {\n    this.onPlayFns.push(fn);\n  }\n  oncePlay(fn) {\n    fn.once = true;\n    this.onPlay(fn);\n  }\n  processGamestate(state) {\n    this.balance = state.balance;\n    this.coinValueValueIndex = this.coinValueValues.indexOf(state.coinValue);\n    this.bet = state.bet;\n    state.reels.forEach((reelValues, i) => {\n      this.reelsController.reels[i].values = reelValues;\n    });\n    this.ticker.start();\n  }\n  processBet(data) {\n    this.balance = data.balance;\n    data.reels.forEach((reelValues, i) => {\n      this.reelsController.reels[i].stopValues = reelValues.slice();\n    });\n    if (data.isWin) {\n      let totalWin = 0;\n      data.win.forEach(line => totalWin += line.amount);\n      this.balance -= totalWin;\n      const o = {\n        balance: this.balance\n      };\n      this.creditsTweenCompleted = false;\n      this.reelsController.onceStop(() => {\n        const creditsTween = gsap.to(o, {\n          balance: this.balance + totalWin,\n          duration: 3,\n          onUpdate: () => {\n            this.balance = o.balance;\n          },\n          onComplete: () => {\n            this.balance = data.balance;\n            this.creditsTweenCompleted = true;\n          }\n        });\n        this.reelsController.onceStart(() => {\n          setTimeout(() => {\n            if (creditsTween && creditsTween.isActive()) {\n              creditsTween.progress(1);\n              creditsTween.kill();\n            }\n          });\n        });\n      });\n    }\n    this.betResponse = data;\n    if (this.reelsController.stopCommandGiven) {\n      this.play();\n    }\n  }\n  addResource(resource) {\n    if (resource.constructor === Array) {\n      this.assets = [...this.assets, ...resource.map(r => {\n        return {\n          name: r.name,\n          srcs: r.source\n        };\n      })];\n    } else {\n      this.assets.push({\n        name: resource.name,\n        srcs: resource.source\n      });\n    }\n  }\n  addSprite(resourceKey) {\n    const sprite = PIXI.Sprite.from(resourceKey);\n    this.sprites.push(sprite);\n    this.stage.addChild(sprite);\n    return sprite;\n  }\n  addButton(resources, onClick) {\n    const sprite = PIXI.Sprite.from(resources[0]);\n    sprite.interactive = true;\n    sprite.on('pointerenter', () => {\n      if (sprite.disabled) {\n        sprite.texture = PIXI.Texture.from(resources[3]);\n      } else {\n        sprite.texture = PIXI.Texture.from(resources[1]);\n      }\n    });\n    let isDown = false;\n    sprite.on('pointerdown', () => {\n      if (sprite.disabled) {\n        sprite.texture = PIXI.Texture.from(resources[3]);\n      } else {\n        sprite.texture = PIXI.Texture.from(resources[2]);\n      }\n      isDown = true;\n    });\n    sprite.on('pointerleave', () => {\n      if (sprite.disabled) {\n        sprite.texture = PIXI.Texture.from(resources[3]);\n      } else {\n        sprite.texture = PIXI.Texture.from(resources[0]);\n      }\n    });\n    sprite.on('pointerup', () => {\n      if (isDown) {\n        onClick();\n        if (sprite.disabled) {\n          sprite.texture = PIXI.Texture.from(resources[3]);\n        } else {\n          sprite.texture = PIXI.Texture.from(resources[0]);\n        }\n        isDown = false;\n      }\n    });\n    this.sprites.push(sprite);\n    this.stage.addChild(sprite);\n    return sprite;\n  }\n  destroy() {\n    this.ticker.stop();\n    this.stage.destroy();\n    this.socket.off('gamestate', this.onNetworkGamestate);\n    this.socket.off('bet', this.onNetworkBet);\n    window.removeEventListener('keypress', this.onActionButtonPressed);\n    this.onDestroyFns.forEach(fn => fn());\n    PIXI.Assets.unloadBundle(this.id);\n  }\n  get coinValue() {\n    return this.coinValueValues[this.coinValueValueIndex];\n  }\n  get betValue() {\n    return this.bet * 10 * this.coinValue;\n  }\n  get betValueToLocale() {\n    return this.betValue.toLocaleString('en-US', {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    });\n  }\n  set balance(value) {\n    this._balance = value;\n    this.onBalanceChangeFns.forEach(fn => fn(this._balance));\n  }\n  get balance() {\n    return this._balance;\n  }\n  onBalanceChange(fn) {\n    this.onBalanceChangeFns.push(fn);\n  }\n  set bet(value) {\n    this._bet = value;\n    this.onBetChangeFns.forEach(fn => fn(this._bet));\n  }\n  get bet() {\n    return this._bet;\n  }\n  onBetChange(fn) {\n    this.onBetChangeFns.push(fn);\n  }\n  set coinValueValueIndex(value) {\n    this._coinValueValueIndex = value;\n    this.onCoinValueChangeFns.forEach(fn => fn(this.coinValueValues[this._coinValueValueIndex]));\n  }\n  get coinValueValueIndex() {\n    return this._coinValueValueIndex;\n  }\n  onCoinValueChange(fn) {\n    this.onCoinValueChangeFns.push(fn);\n  }\n}\nexport default SlotGame;","map":{"version":3,"names":["PIXI","ReelsController","gsap","SlotGame","constructor","id","width","height","reelsCount","reelPositions","symbolsCount","hasBlurredSymbols","symbolMargin","maskPaddingX","maskPaddingY","reelsSpeed","spinTime","spinTimeBetweenReels","socket","onInitFns","onDestroyFns","onBalanceChangeFns","onBetChangeFns","onCoinValueChangeFns","onLoadingFns","onPlayFns","renderer","autoDetectRenderer","window","innerWidth","innerHeight","antialias","stage","Container","ticker","Ticker","add","render","assets","soundAssets","reelsRun","Audio","reelStop","winEffect","coinsEffect","sprites","texts","_bet","coinValueValues","_coinValueValueIndex","_balance","autoplay","creditsTweenCompleted","onInit","fn","push","onDestroy","resize","gameRatio","windowRatio","scale","x","view","y","init","reelsController","forEach","children","sort","a","b","z","onWindowResize","setTimeout","addEventListener","removeEventListener","onNetworkGamestate","state","processGamestate","on","onNetworkBet","data","processBet","text","t","reelsActive","betResponse","isWin","play","onActionButtonPressed","e","code","start","Assets","addBundle","loadBundle","progress","then","emit","key","localStorage","getItem","gameId","onLoading","onStopCommandFns","reels","some","r","rolling","stopping","positions","forceStopped","stoppedAutomatically","pause","src","i","values","slice","offset","stopCommandGiven","length","once","splice","bet","coinValue","balance","Math","round","betValue","roll","onceStop","onStopFns","loop","currentTime","onStartFns","onPlay","oncePlay","coinValueValueIndex","indexOf","reelValues","stopValues","totalWin","win","line","amount","o","creditsTween","to","duration","onUpdate","onComplete","onceStart","isActive","kill","addResource","resource","Array","map","name","srcs","source","addSprite","resourceKey","sprite","Sprite","from","addChild","addButton","resources","onClick","interactive","disabled","texture","Texture","isDown","destroy","stop","off","unloadBundle","betValueToLocale","toLocaleString","minimumFractionDigits","maximumFractionDigits","value","onBalanceChange","onBetChange","onCoinValueChange"],"sources":["/workspaces/royal-games-updated/src/slot/SlotGame.js"],"sourcesContent":["import * as PIXI from 'pixi.js';\r\nimport ReelsController from './ReelsController';\r\nimport gsap from 'gsap';\r\n\r\nclass SlotGame {\r\n  onInitFns = [];\r\n  onDestroyFns = [];\r\n  onBalanceChangeFns = [];\r\n  onBetChangeFns = [];\r\n  onCoinValueChangeFns = [];\r\n  onLoadingFns = [];\r\n  onPlayFns = [];\r\n\r\n  constructor({\r\n    id,\r\n    width,\r\n    height,\r\n    reelsCount,\r\n    reelPositions,\r\n    symbolsCount,\r\n    hasBlurredSymbols,\r\n    symbolMargin,\r\n    maskPaddingX,\r\n    maskPaddingY,\r\n    reelsSpeed,\r\n    spinTime,\r\n    spinTimeBetweenReels,\r\n  }, socket) {\r\n    this.id = id;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.reelsCount = reelsCount;\r\n    this.reelPositions = reelPositions;\r\n    this.symbolsCount = symbolsCount;\r\n    this.hasBlurredSymbols = hasBlurredSymbols || false;\r\n    this.symbolMargin = symbolMargin || 0;\r\n    this.maskPaddingX = maskPaddingX || 0;\r\n    this.maskPaddingY = maskPaddingY || 0;\r\n    this.reelsSpeed = reelsSpeed || 0.18;\r\n    this.spinTime = spinTime;\r\n    this.spinTimeBetweenReels = spinTimeBetweenReels;\r\n    this.socket = socket;\r\n\r\n    this.renderer = new PIXI.autoDetectRenderer({\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n      antialias: true,\r\n    });\r\n\r\n    this.stage = new PIXI.Container();\r\n\r\n    this.ticker = new PIXI.Ticker();\r\n\r\n    this.ticker.add(() => {\r\n      this.renderer.render(this.stage);\r\n    });\r\n\r\n    this.assets = [];\r\n    this.soundAssets = {\r\n      reelsRun: new Audio(`/data/reels-run.mp3`),\r\n      reelStop: new Audio(`/data/reel-stop.mp3`),\r\n      winEffect: new Audio(`/data/win.mp3`),\r\n      coinsEffect: new Audio(`/data/coins.mp3`),\r\n    };\r\n\r\n    this.sprites = [];\r\n    this.texts = [];\r\n\r\n    this._bet = 1;\r\n    this.coinValueValues = [0.01, 0.03, 0.10, 0.20, 0.50];\r\n    this._coinValueValueIndex = 0;\r\n    this._balance = 0;\r\n\r\n    this.autoplay = false;\r\n    this.creditsTweenCompleted = true;\r\n  }\r\n\r\n  onInit(fn) {\r\n    this.onInitFns.push(fn);\r\n  }\r\n\r\n  onDestroy(fn) {\r\n    this.onDestroyFns.push(fn);\r\n  }\r\n\r\n  resize() {\r\n    const gameRatio = this.width / this.height;\r\n    const windowRatio = window.innerWidth / window.innerHeight;\r\n    let width, height;\r\n\r\n    if (windowRatio < gameRatio) {\r\n      width = window.innerWidth;\r\n      height = width / gameRatio;\r\n    } else {\r\n      height = window.innerHeight;\r\n      width = height * gameRatio;\r\n    }\r\n\r\n    this.renderer.resize(width, height);\r\n\r\n    this.stage.scale.x = this.renderer.view.width / this.width;\r\n    this.stage.scale.y = this.renderer.view.height / this.height;\r\n  }\r\n\r\n  init() {\r\n    this.reelsController = new ReelsController(this, this.spinTime, this.spinTimeBetweenReels);\r\n\r\n    this.resize();\r\n\r\n    this.onInitFns.forEach((fn) => fn());\r\n\r\n    this.stage.children.sort(function(a, b) {\r\n      if (a.z > b.z) {\r\n        return 1;\r\n      } else {\r\n        return -1;\r\n      }\r\n    });\r\n\r\n    const onWindowResize = () => {\r\n      setTimeout(() => {\r\n        this.resize();\r\n      }, 50);\r\n    };\r\n\r\n    window.addEventListener('resize', onWindowResize);\r\n\r\n    this.onDestroy(() => {\r\n      window.removeEventListener('resize', onWindowResize);\r\n    });\r\n\r\n    this.onNetworkGamestate = (state) => {\r\n      this.processGamestate(state);\r\n    };\r\n    this.socket.on('gamestate', this.onNetworkGamestate);\r\n\r\n    this.onNetworkBet = (data) => {\r\n      this.processBet(data);\r\n    };\r\n    this.socket.on('bet', this.onNetworkBet);\r\n\r\n    this.ticker.add(() => {\r\n      this.texts.forEach((text) => {\r\n        const t = text.text;\r\n        text.text = '';\r\n        text.text = t;\r\n      });\r\n    });\r\n\r\n    this.ticker.add(() => {\r\n      if (this.autoplay) {\r\n        if (!this.reelsController.reelsActive) {\r\n          if (this.betResponse === null || !this.betResponse.isWin || this.creditsTweenCompleted) {\r\n            this.play();\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    this.onActionButtonPressed = (e) => {\r\n      if (e.code === 'Space' || e.code === 'Numpad0') {\r\n        this.play();\r\n      }\r\n    };\r\n    window.addEventListener('keypress', this.onActionButtonPressed);\r\n  }\r\n\r\n  start() {\r\n    PIXI.Assets.addBundle(this.id, this.assets);\r\n    PIXI.Assets.loadBundle(this.id, (progress) => {\r\n      this.onLoadingFns.forEach((fn) => {\r\n        fn(progress);\r\n      });\r\n    }).then(() => {\r\n      this.init();\r\n\r\n      this.socket.emit('gamestate', {\r\n        key: localStorage.getItem('key'),\r\n        gameId: this.id,\r\n      });\r\n    });\r\n  }\r\n\r\n  onLoading(fn) {\r\n    this.onLoadingFns.push(fn);\r\n  }\r\n\r\n  play() {\r\n    if (this.reelsController.reelsActive) {\r\n      if (this.betResponse) {\r\n        this.reelsController.onStopCommandFns.forEach((fn) => fn());\r\n\r\n        if (this.reelsController.reels.some((r) => (r.rolling === true || r.stopping < r.positions + 1) && !(r.forceStopped || r.stoppedAutomatically))) {\r\n          this.soundAssets.reelsRun.pause();\r\n          new Audio(this.soundAssets.reelStop.src).play();\r\n        }\r\n\r\n        this.reelsController.reels.forEach((r, i) => {\r\n          if ((r.rolling === true || r.stopping < r.positions + 1) && !(r.forceStopped || r.stoppedAutomatically)) {\r\n            r.values = this.betResponse.reels[i].slice();\r\n            r.offset = 0;\r\n            r.stopping = r.positions + 1;\r\n            r.forceStopped = true;\r\n          }\r\n        });\r\n      }\r\n\r\n      if (!this.reelsController.stopCommandGiven) {\r\n        this.reelsController.stopCommandGiven = true;\r\n        this.autoplay = false;\r\n\r\n        for (let i = 0; i < this.onPlayFns.length; i++) {\r\n          const fn = this.onPlayFns[i];\r\n          fn();\r\n\r\n          if (fn.once) {\r\n            this.onPlayFns.splice(i--, 1);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.socket.emit('bet', {\r\n        key: localStorage.getItem('key'),\r\n        gameId: this.id,\r\n        bet: this.bet,\r\n        coinValue: this.coinValue,\r\n      });\r\n\r\n      this.betResponse = null;\r\n      this.reelsController.stopCommandGiven = false;\r\n      this.balance -= Math.round(this.betValue * 100) / 100;\r\n\r\n      this.reelsController.reels.forEach((r) => {\r\n        r.stoppedAutomatically = false;\r\n        r.forceStopped = false;\r\n        r.roll();\r\n\r\n        r.onceStop(() => {\r\n          if (!this.reelsController.reelsActive) {\r\n            for (let i = 0; i < this.reelsController.onStopFns.length; i++) {\r\n              const fn = this.reelsController.onStopFns[i];\r\n\r\n              if (fn.once) {\r\n                this.reelsController.onStopFns.splice(i--, 1);\r\n              }\r\n\r\n              fn();\r\n            }\r\n          }\r\n\r\n          this.soundAssets.reelsRun.pause();\r\n        });\r\n      });\r\n\r\n      this.soundAssets.reelsRun.loop = true;\r\n      this.soundAssets.reelsRun.currentTime = 0;\r\n      this.soundAssets.reelsRun.play();\r\n\r\n      for (let i = 0; i < this.reelsController.onStartFns.length; i++) {\r\n        const fn = this.reelsController.onStartFns[i];\r\n\r\n        if (fn.once) {\r\n          this.reelsController.onStartFns.splice(i--, 1);\r\n        }\r\n\r\n        fn();\r\n      }\r\n\r\n      for (let i = 0; i < this.onPlayFns.length; i++) {\r\n        const fn = this.onPlayFns[i];\r\n        fn();\r\n\r\n        if (fn.once) {\r\n          this.onPlayFns.splice(i--, 1);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onPlay(fn) {\r\n    this.onPlayFns.push(fn);\r\n  }\r\n\r\n  oncePlay(fn) {\r\n    fn.once = true;\r\n    this.onPlay(fn);\r\n  }\r\n\r\n  processGamestate(state) {\r\n    this.balance = state.balance;\r\n    this.coinValueValueIndex = this.coinValueValues.indexOf(state.coinValue);\r\n    this.bet = state.bet;\r\n\r\n    state.reels.forEach((reelValues, i) => {\r\n      this.reelsController.reels[i].values = reelValues;\r\n    });\r\n\r\n    this.ticker.start();\r\n  }\r\n\r\n  processBet(data) {\r\n    this.balance = data.balance;\r\n\r\n    data.reels.forEach((reelValues, i) => {\r\n      this.reelsController.reels[i].stopValues = reelValues.slice();\r\n    });\r\n\r\n    if (data.isWin) {\r\n      let totalWin = 0;\r\n      data.win.forEach((line) => totalWin += line.amount);\r\n      this.balance -= totalWin;\r\n\r\n      const o = { balance: this.balance };\r\n      this.creditsTweenCompleted = false;\r\n      this.reelsController.onceStop(() => {\r\n        const creditsTween = gsap.to(o, {\r\n          balance: this.balance + totalWin,\r\n          duration: 3,\r\n          onUpdate: () => {\r\n            this.balance = o.balance;\r\n          },\r\n          onComplete: () => {\r\n            this.balance = data.balance;\r\n            this.creditsTweenCompleted = true;\r\n          },\r\n        });\r\n\r\n        this.reelsController.onceStart(() => {\r\n          setTimeout(() => {\r\n            if (creditsTween && creditsTween.isActive()) {\r\n              creditsTween.progress(1);\r\n              creditsTween.kill();\r\n            }\r\n          });\r\n        });\r\n      });\r\n    }\r\n\r\n    this.betResponse = data;\r\n\r\n    if (this.reelsController.stopCommandGiven) {\r\n      this.play();\r\n    }\r\n  }\r\n\r\n  addResource(resource) {\r\n    if (resource.constructor === Array) {\r\n      this.assets = [\r\n        ...this.assets,\r\n        ...resource.map((r) => {\r\n          return {\r\n            name: r.name,\r\n            srcs: r.source,\r\n          };\r\n        }),\r\n      ];\r\n    } else {\r\n      this.assets.push({\r\n        name: resource.name,\r\n        srcs: resource.source,\r\n      });\r\n    }\r\n  }\r\n\r\n  addSprite(resourceKey) {\r\n    const sprite = PIXI.Sprite.from(resourceKey);\r\n\r\n    this.sprites.push(sprite);\r\n    this.stage.addChild(sprite);\r\n\r\n    return sprite;\r\n  }\r\n\r\n  addButton(resources, onClick) {\r\n    const sprite = PIXI.Sprite.from(resources[0]);\r\n    sprite.interactive = true;\r\n\r\n    sprite.on('pointerenter', () => {\r\n      if (sprite.disabled) {\r\n        sprite.texture = PIXI.Texture.from(resources[3]);\r\n      } else {\r\n        sprite.texture = PIXI.Texture.from(resources[1]);\r\n      }\r\n    });\r\n\r\n    let isDown = false;\r\n    sprite.on('pointerdown', () => {\r\n      if (sprite.disabled) {\r\n        sprite.texture = PIXI.Texture.from(resources[3]);\r\n      } else {\r\n        sprite.texture = PIXI.Texture.from(resources[2]);\r\n      }\r\n      isDown = true;\r\n    });\r\n\r\n    sprite.on('pointerleave', () => {\r\n      if (sprite.disabled) {\r\n        sprite.texture = PIXI.Texture.from(resources[3]);\r\n      } else {\r\n        sprite.texture = PIXI.Texture.from(resources[0]);\r\n      }\r\n    });\r\n\r\n    sprite.on('pointerup', () => {\r\n      if (isDown) {\r\n        onClick();\r\n\r\n        if (sprite.disabled) {\r\n          sprite.texture = PIXI.Texture.from(resources[3]);\r\n        } else {\r\n          sprite.texture = PIXI.Texture.from(resources[0]);\r\n        }\r\n\r\n        isDown = false;\r\n      }\r\n    });\r\n\r\n    this.sprites.push(sprite);\r\n    this.stage.addChild(sprite);\r\n\r\n    return sprite;\r\n  }\r\n\r\n  destroy() {\r\n    this.ticker.stop();\r\n    this.stage.destroy();\r\n    this.socket.off('gamestate', this.onNetworkGamestate);\r\n    this.socket.off('bet', this.onNetworkBet);\r\n    window.removeEventListener('keypress', this.onActionButtonPressed);\r\n    this.onDestroyFns.forEach((fn) => fn());\r\n    PIXI.Assets.unloadBundle(this.id);\r\n  }\r\n\r\n  get coinValue() {\r\n    return this.coinValueValues[this.coinValueValueIndex];\r\n  }\r\n\r\n  get betValue() {\r\n    return this.bet * 10 * this.coinValue;\r\n  }\r\n\r\n  get betValueToLocale() {\r\n    return this.betValue.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });\r\n  }\r\n\r\n  set balance(value) {\r\n    this._balance = value;\r\n    this.onBalanceChangeFns.forEach((fn) => fn(this._balance));\r\n  }\r\n\r\n  get balance() {\r\n    return this._balance;\r\n  }\r\n\r\n  onBalanceChange(fn) {\r\n    this.onBalanceChangeFns.push(fn);\r\n  }\r\n\r\n  set bet(value) {\r\n    this._bet = value;\r\n    this.onBetChangeFns.forEach((fn) => fn(this._bet));\r\n  }\r\n\r\n  get bet() {\r\n    return this._bet;\r\n  }\r\n\r\n  onBetChange(fn) {\r\n    this.onBetChangeFns.push(fn);\r\n  }\r\n\r\n  set coinValueValueIndex(value) {\r\n    this._coinValueValueIndex = value;\r\n    this.onCoinValueChangeFns.forEach((fn) => fn(this.coinValueValues[this._coinValueValueIndex]));\r\n  }\r\n\r\n  get coinValueValueIndex() {\r\n    return this._coinValueValueIndex;\r\n  }\r\n\r\n  onCoinValueChange(fn) {\r\n    this.onCoinValueChangeFns.push(fn);\r\n  }\r\n}\r\n\r\nexport default SlotGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}