{"ast":null,"code":"import io from \"socket.io-client\";\nimport React from 'react';\nimport store from '../store';\nimport lobbySlice from \"../lobbySlice\";\n\n// export const socket = io.connect('https://royal-games-updated.vercel.com');\nexport const socket = io.connect('http://localhost:3001');\nexport const SocketContext = /*#__PURE__*/React.createContext();\nsocket.on('connect', () => {\n  socket.emit('login', {\n    key: localStorage.getItem('key')\n  });\n  const waitForLoginTimeout = setTimeout(() => {\n    // propably invalid key in localStorage\n    localStorage.removeItem('key');\n    socket.emit('login', {\n      key: localStorage.getItem('key')\n    });\n  }, 5000);\n  socket.on('login', data => {\n    clearTimeout(waitForLoginTimeout);\n    if (data.status === 'logged-in') {\n      localStorage.setItem('key', data.key);\n      store.dispatch(lobbySlice.actions.updateLoginState({\n        status: data.status,\n        username: data.username\n      }));\n      store.dispatch(lobbySlice.actions.updateBalance(data.balance));\n    }\n  });\n});\nsocket.on('disconnect', () => {\n  store.dispatch(lobbySlice.actions.updateLoginState('logged-out'));\n  store.dispatch(lobbySlice.actions.updateBalance(0));\n});","map":{"version":3,"names":["io","React","store","lobbySlice","socket","connect","SocketContext","createContext","on","emit","key","localStorage","getItem","waitForLoginTimeout","setTimeout","removeItem","data","clearTimeout","status","setItem","dispatch","actions","updateLoginState","username","updateBalance","balance"],"sources":["/workspaces/royal-games-updated/src/context/socket.js"],"sourcesContent":["import io from \"socket.io-client\";\nimport React from 'react';\nimport store from '../store';\nimport lobbySlice from \"../lobbySlice\";\n\n// export const socket = io.connect('https://royal-games-updated.vercel.com');\nexport const socket = io.connect('http://localhost:3001');\nexport const SocketContext = React.createContext();\n\nsocket.on('connect', () => {\n\n  socket.emit('login', {\n    key: localStorage.getItem('key'),\n  });\n  const waitForLoginTimeout = setTimeout(() => {\n    // propably invalid key in localStorage\n    localStorage.removeItem('key');\n\n    socket.emit('login', {\n      key: localStorage.getItem('key'),\n    });\n  }, 5000);\n\n  socket.on('login', (data) => {\n    clearTimeout(waitForLoginTimeout);\n\n    if (data.status === 'logged-in') {\n      localStorage.setItem('key', data.key);\n\n      store.dispatch(lobbySlice.actions.updateLoginState({\n        status: data.status,\n        username: data.username,\n      }));\n      store.dispatch(lobbySlice.actions.updateBalance(data.balance));\n    }\n  });\n});\n\nsocket.on('disconnect', () => {\n  store.dispatch(lobbySlice.actions.updateLoginState('logged-out'));\n  store.dispatch(lobbySlice.actions.updateBalance(0));\n});\n"],"mappings":"AAAA,OAAOA,EAAE,MAAM,kBAAkB;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,UAAU;AAC5B,OAAOC,UAAU,MAAM,eAAe;;AAEtC;AACA,OAAO,MAAMC,MAAM,GAAGJ,EAAE,CAACK,OAAO,CAAC,uBAAuB,CAAC;AACzD,OAAO,MAAMC,aAAa,gBAAGL,KAAK,CAACM,aAAa,CAAC,CAAC;AAElDH,MAAM,CAACI,EAAE,CAAC,SAAS,EAAE,MAAM;EAEzBJ,MAAM,CAACK,IAAI,CAAC,OAAO,EAAE;IACnBC,GAAG,EAAEC,YAAY,CAACC,OAAO,CAAC,KAAK;EACjC,CAAC,CAAC;EACF,MAAMC,mBAAmB,GAAGC,UAAU,CAAC,MAAM;IAC3C;IACAH,YAAY,CAACI,UAAU,CAAC,KAAK,CAAC;IAE9BX,MAAM,CAACK,IAAI,CAAC,OAAO,EAAE;MACnBC,GAAG,EAAEC,YAAY,CAACC,OAAO,CAAC,KAAK;IACjC,CAAC,CAAC;EACJ,CAAC,EAAE,IAAI,CAAC;EAERR,MAAM,CAACI,EAAE,CAAC,OAAO,EAAGQ,IAAI,IAAK;IAC3BC,YAAY,CAACJ,mBAAmB,CAAC;IAEjC,IAAIG,IAAI,CAACE,MAAM,KAAK,WAAW,EAAE;MAC/BP,YAAY,CAACQ,OAAO,CAAC,KAAK,EAAEH,IAAI,CAACN,GAAG,CAAC;MAErCR,KAAK,CAACkB,QAAQ,CAACjB,UAAU,CAACkB,OAAO,CAACC,gBAAgB,CAAC;QACjDJ,MAAM,EAAEF,IAAI,CAACE,MAAM;QACnBK,QAAQ,EAAEP,IAAI,CAACO;MACjB,CAAC,CAAC,CAAC;MACHrB,KAAK,CAACkB,QAAQ,CAACjB,UAAU,CAACkB,OAAO,CAACG,aAAa,CAACR,IAAI,CAACS,OAAO,CAAC,CAAC;IAChE;EACF,CAAC,CAAC;AACJ,CAAC,CAAC;AAEFrB,MAAM,CAACI,EAAE,CAAC,YAAY,EAAE,MAAM;EAC5BN,KAAK,CAACkB,QAAQ,CAACjB,UAAU,CAACkB,OAAO,CAACC,gBAAgB,CAAC,YAAY,CAAC,CAAC;EACjEpB,KAAK,CAACkB,QAAQ,CAACjB,UAAU,CAACkB,OAAO,CAACG,aAAa,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}