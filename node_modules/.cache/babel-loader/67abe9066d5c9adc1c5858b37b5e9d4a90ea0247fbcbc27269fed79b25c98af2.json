{"ast":null,"code":"import Reel from './Reel';\nclass ReelsController {\n  constructor(game, spinTime, spinTimeBetweenReels) {\n    this.onStartFns = [];\n    this.onStopCommandFns = [];\n    this.onStopFns = [];\n    this.stopCommandGiven = false;\n    this.reels = [];\n    for (let i = 0; i < game.reelsCount; i++) {\n      const spinValues = [];\n      for (let k = 0; k < 1000; k++) {\n        spinValues.push(parseInt(Math.random() * game.symbolsCount) + 1);\n      }\n      const reel = new Reel({\n        positions: game.reelPositions,\n        spinValues,\n        speed: game.reelsSpeed,\n        useBlurredSymbols: game.hasBlurredSymbols,\n        bounceDepthPerc: 0.1,\n        bounceDuration: 350,\n        symbolMargin: game.symbolMargin,\n        maskPaddingX: game.maskPaddingX,\n        maskPaddingY: game.maskPaddingY\n      });\n      reel.container.z = 3;\n      reel.mask.z = 4;\n      game.ticker.add(() => {\n        reel.render();\n      });\n      game.stage.addChild(reel.container);\n      game.stage.addChild(reel.mask);\n      this.reels.push(reel);\n    }\n    this.reels.forEach(reel => {\n      reel.rollingTime = 0;\n    });\n    this.spinTime = spinTime || 350;\n    this.spinTimeBetweenReels = spinTimeBetweenReels || 200;\n    game.ticker.add(delta => {\n      for (let i = 0; i < this.reels.length; i++) {\n        const reel = this.reels[i];\n        const active = reel.rolling === true || reel.stopping !== false;\n        if (active && game.betResponse) {\n          const reelStopTime = this.spinTime + i * this.spinTimeBetweenReels;\n          if (reel.rollingTime > reelStopTime) {\n            reel._stopValues = reel.stopValues;\n            reel.stop();\n            reel.onceStop(function () {\n              reel.stoppedAutomatically = true;\n            });\n          } else {\n            reel.rollingTime += delta * 16.667;\n          }\n        } else {\n          reel.rollingTime = 0;\n        }\n      }\n    });\n  }\n  get reelsActive() {\n    return this.reels.some(reel => reel.rolling === true || reel.stopping !== false);\n  }\n  onStart(fn) {\n    this.onStartFns.push(fn);\n  }\n  onceStart(fn) {\n    fn.once = true;\n    this.onStart(fn);\n  }\n  onStopCommand(fn) {\n    this.onStopCommandFns.push(fn);\n  }\n  onStop(fn) {\n    this.onStopFns.push(fn);\n  }\n  onceStop(fn) {\n    fn.once = true;\n    this.onStop(fn);\n  }\n}\nexport default ReelsController;","map":{"version":3,"names":["Reel","ReelsController","constructor","game","spinTime","spinTimeBetweenReels","onStartFns","onStopCommandFns","onStopFns","stopCommandGiven","reels","i","reelsCount","spinValues","k","push","parseInt","Math","random","symbolsCount","reel","positions","reelPositions","speed","reelsSpeed","useBlurredSymbols","hasBlurredSymbols","bounceDepthPerc","bounceDuration","symbolMargin","maskPaddingX","maskPaddingY","container","z","mask","ticker","add","render","stage","addChild","forEach","rollingTime","delta","length","active","rolling","stopping","betResponse","reelStopTime","_stopValues","stopValues","stop","onceStop","stoppedAutomatically","reelsActive","some","onStart","fn","onceStart","once","onStopCommand","onStop"],"sources":["/workspaces/royal-games-updated/src/slot/ReelsController.js"],"sourcesContent":["import Reel from './Reel';\r\n\r\nclass ReelsController {\r\n  onStartFns = [];\r\n  onStopCommandFns = [];\r\n  onStopFns = [];\r\n  stopCommandGiven = false;\r\n\r\n  constructor(game, spinTime, spinTimeBetweenReels) {\r\n    this.reels = [];\r\n\r\n    for (let i = 0; i < game.reelsCount; i++) {\r\n      const spinValues = [];\r\n      for (let k = 0; k < 1000; k++) {\r\n        spinValues.push(parseInt(Math.random() * game.symbolsCount) + 1);\r\n      }\r\n\r\n      const reel = new Reel({\r\n        positions: game.reelPositions,\r\n        spinValues,\r\n        speed: game.reelsSpeed,\r\n        useBlurredSymbols: game.hasBlurredSymbols,\r\n        bounceDepthPerc: 0.1,\r\n        bounceDuration: 350,\r\n        symbolMargin: game.symbolMargin,\r\n        maskPaddingX: game.maskPaddingX,\r\n        maskPaddingY: game.maskPaddingY,\r\n      });\r\n      reel.container.z = 3;\r\n      reel.mask.z = 4;\r\n\r\n      game.ticker.add(() => {\r\n        reel.render();\r\n      });\r\n\r\n      game.stage.addChild(reel.container);\r\n      game.stage.addChild(reel.mask);\r\n      this.reels.push(reel);\r\n    }\r\n\r\n    this.reels.forEach((reel) => {\r\n      reel.rollingTime = 0;\r\n    });\r\n\r\n    this.spinTime = spinTime || 350;\r\n    this.spinTimeBetweenReels = spinTimeBetweenReels || 200;\r\n\r\n    game.ticker.add((delta) => {\r\n      for (let i = 0; i < this.reels.length; i++) {\r\n        const reel = this.reels[i];\r\n        const active = reel.rolling === true || reel.stopping !== false;\r\n\r\n        if (active && game.betResponse) {\r\n          const reelStopTime = this.spinTime + (i * this.spinTimeBetweenReels);\r\n          if (reel.rollingTime > reelStopTime) {\r\n            reel._stopValues = reel.stopValues;\r\n            reel.stop();\r\n            reel.onceStop(function() {\r\n              reel.stoppedAutomatically = true;\r\n            });\r\n          } else {\r\n            reel.rollingTime += delta * 16.667;\r\n          }\r\n        } else {\r\n          reel.rollingTime = 0;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  get reelsActive() {\r\n    return this.reels.some((reel) => reel.rolling === true || reel.stopping !== false);\r\n  }\r\n\r\n  onStart(fn) {\r\n    this.onStartFns.push(fn);\r\n  }\r\n\r\n  onceStart(fn) {\r\n    fn.once = true;\r\n    this.onStart(fn);\r\n  }\r\n\r\n  onStopCommand(fn) {\r\n    this.onStopCommandFns.push(fn);\r\n  }\r\n\r\n  onStop(fn) {\r\n    this.onStopFns.push(fn);\r\n  }\r\n\r\n  onceStop(fn) {\r\n    fn.once = true;\r\n    this.onStop(fn);\r\n  }\r\n}\r\n\r\nexport default ReelsController;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}