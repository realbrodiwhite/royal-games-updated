{"ast":null,"code":"import { UniformGroup } from '../../shared/shader/UniformGroup.mjs';\n\"use strict\";\nconst batchSamplersUniformGroupHash = {};\nfunction getBatchSamplersUniformGroup(maxTextures) {\n  let batchSamplersUniformGroup = batchSamplersUniformGroupHash[maxTextures];\n  if (batchSamplersUniformGroup) return batchSamplersUniformGroup;\n  const sampleValues = new Int32Array(maxTextures);\n  for (let i = 0; i < maxTextures; i++) {\n    sampleValues[i] = i;\n  }\n  batchSamplersUniformGroup = batchSamplersUniformGroupHash[maxTextures] = new UniformGroup({\n    uTextures: {\n      value: sampleValues,\n      type: `i32`,\n      size: maxTextures\n    }\n  }, {\n    isStatic: true\n  });\n  return batchSamplersUniformGroup;\n}\nexport { getBatchSamplersUniformGroup };","map":{"version":3,"names":["batchSamplersUniformGroupHash","getBatchSamplersUniformGroup","maxTextures","batchSamplersUniformGroup","sampleValues","Int32Array","i","UniformGroup","uTextures","value","type","size","isStatic"],"sources":["/workspaces/royal-games-updated/node_modules/pixi.js/src/rendering/renderers/gl/shader/getBatchSamplersUniformGroup.ts"],"sourcesContent":["import { UniformGroup } from '../../shared/shader/UniformGroup';\n\nconst batchSamplersUniformGroupHash: Record<number, UniformGroup> = {};\n\n/**\n * Automatically generates a uniform group that holds the texture samplers for a shader.\n * This is used mainly by the shaders that batch textures!\n * @param maxTextures - the number of textures that this uniform group will contain.\n * @returns a uniform group that holds the texture samplers.\n */\nexport function getBatchSamplersUniformGroup(maxTextures: number)\n{\n    let batchSamplersUniformGroup = batchSamplersUniformGroupHash[maxTextures];\n\n    if (batchSamplersUniformGroup) return batchSamplersUniformGroup;\n\n    const sampleValues = new Int32Array(maxTextures);\n\n    for (let i = 0; i < maxTextures; i++)\n    {\n        sampleValues[i] = i;\n    }\n\n    batchSamplersUniformGroup = batchSamplersUniformGroupHash[maxTextures] = new UniformGroup({\n        uTextures: { value: sampleValues, type: `i32`, size: maxTextures }\n    }, { isStatic: true });\n\n    return batchSamplersUniformGroup;\n}\n"],"mappings":";;AAEA,MAAMA,6BAAA,GAA8D,EAAC;AAQ9D,SAASC,6BAA6BC,WAC7C;EACQ,IAAAC,yBAAA,GAA4BH,6BAAA,CAA8BE,WAAW;EAErE,IAAAC,yBAAA,EAAkC,OAAAA,yBAAA;EAEhC,MAAAC,YAAA,GAAe,IAAIC,UAAA,CAAWH,WAAW;EAE/C,SAASI,CAAI,MAAGA,CAAI,GAAAJ,WAAA,EAAaI,CACjC;IACIF,YAAA,CAAaE,CAAC,CAAI,GAAAA,CAAA;EAAA;EAGtBH,yBAAA,GAA4BH,6BAA8B,CAAAE,WAAW,CAAI,OAAIK,YAAa;IACtFC,SAAA,EAAW;MAAEC,KAAA,EAAOL,YAAA;MAAcM,IAAM;MAAOC,IAAA,EAAMT;IAAY;EAAA,CAClE;IAAEU,QAAU;EAAA,CAAM;EAEd,OAAAT,yBAAA;AACX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}