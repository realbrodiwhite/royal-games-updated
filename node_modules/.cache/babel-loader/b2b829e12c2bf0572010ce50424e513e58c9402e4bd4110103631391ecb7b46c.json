{"ast":null,"code":"import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { loadTextures } from '../../loader/parsers/textures/loadTextures.mjs';\nimport { Resolver } from '../Resolver.mjs';\n\"use strict\";\nconst resolveTextureUrl = {\n  extension: {\n    type: ExtensionType.ResolveParser,\n    name: \"resolveTexture\"\n  },\n  test: loadTextures.test,\n  parse: value => ({\n    resolution: parseFloat(Resolver.RETINA_PREFIX.exec(value)?.[1] ?? \"1\"),\n    format: value.split(\".\").pop(),\n    src: value\n  })\n};\nexport { resolveTextureUrl };","map":{"version":3,"names":["resolveTextureUrl","extension","type","ExtensionType","ResolveParser","name","test","loadTextures","parse","value","resolution","parseFloat","Resolver","RETINA_PREFIX","exec","format","split","pop","src"],"sources":["/workspaces/royal-games-updated/node_modules/pixi.js/src/assets/resolver/parsers/resolveTextureUrl.ts"],"sourcesContent":["import { ExtensionType } from '../../../extensions/Extensions';\nimport { loadTextures } from '../../loader/parsers/textures/loadTextures';\nimport { Resolver } from '../Resolver';\n\nimport type { ResolveURLParser } from '../types';\n\n/**\n * A parser that will resolve a texture url\n * @memberof assets\n */\nexport const resolveTextureUrl = {\n    extension: {\n        type: ExtensionType.ResolveParser,\n        name: 'resolveTexture',\n    },\n    test: loadTextures.test,\n    parse: (value: string) =>\n        ({\n            resolution: parseFloat(Resolver.RETINA_PREFIX.exec(value)?.[1] ?? '1'),\n            format: value.split('.').pop(),\n            src: value,\n        }),\n} satisfies ResolveURLParser;\n"],"mappings":";;;;AAUO,MAAMA,iBAAoB;EAC7BC,SAAW;IACPC,IAAA,EAAMC,aAAc,CAAAC,aAAA;IACpBC,IAAM;EAAA,CACV;EACAC,IAAA,EAAMC,YAAa,CAAAD,IAAA;EACnBE,KAAA,EAAQC,KACH;IACGC,UAAA,EAAYC,UAAA,CAAWC,QAAS,CAAAC,aAAA,CAAcC,IAAA,CAAKL,KAAK,IAAI,CAAC,KAAK,GAAG;IACrEM,MAAQ,EAAAN,KAAA,CAAMO,KAAM,IAAG,EAAEC,GAAI;IAC7BC,GAAK,EAAAT;EAAA,CACT;AACR","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}