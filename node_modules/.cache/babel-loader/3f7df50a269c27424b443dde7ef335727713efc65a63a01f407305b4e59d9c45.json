{"ast":null,"code":"import { ExtensionType } from '../../../../extensions/Extensions.mjs';\n\"use strict\";\nclass GpuShaderSystem {\n  constructor() {\n    this._gpuProgramData = /* @__PURE__ */Object.create(null);\n  }\n  contextChange(gpu) {\n    this._gpu = gpu;\n    this.maxTextures = gpu.device.limits.maxSampledTexturesPerShaderStage;\n  }\n  getProgramData(program) {\n    return this._gpuProgramData[program._layoutKey] || this._createGPUProgramData(program);\n  }\n  _createGPUProgramData(program) {\n    const device = this._gpu.device;\n    const bindGroups = program.gpuLayout.map(group => device.createBindGroupLayout({\n      entries: group\n    }));\n    const pipelineLayoutDesc = {\n      bindGroupLayouts: bindGroups\n    };\n    this._gpuProgramData[program._layoutKey] = {\n      bindGroups,\n      pipeline: device.createPipelineLayout(pipelineLayoutDesc)\n    };\n    return this._gpuProgramData[program._layoutKey];\n  }\n  destroy() {\n    this._gpu = null;\n    this._gpuProgramData = null;\n  }\n}\n/** @ignore */\nGpuShaderSystem.extension = {\n  type: [ExtensionType.WebGPUSystem],\n  name: \"shader\"\n};\nexport { GpuShaderSystem };","map":{"version":3,"names":["GpuShaderSystem","constructor","_gpuProgramData","Object","create","contextChange","gpu","_gpu","maxTextures","device","limits","maxSampledTexturesPerShaderStage","getProgramData","program","_layoutKey","_createGPUProgramData","bindGroups","gpuLayout","map","group","createBindGroupLayout","entries","pipelineLayoutDesc","bindGroupLayouts","pipeline","createPipelineLayout","destroy","extension","type","ExtensionType","WebGPUSystem","name"],"sources":["/workspaces/royal-games-updated/node_modules/pixi.js/src/rendering/renderers/gpu/shader/GpuShaderSystem.ts"],"sourcesContent":["import { ExtensionType } from '../../../../extensions/Extensions';\n\nimport type { ShaderSystem } from '../../shared/shader/ShaderSystem';\nimport type { GPU } from '../GpuDeviceSystem';\nimport type { GpuProgram } from './GpuProgram';\n\nexport interface GPUProgramData\n{\n    bindGroups: GPUBindGroupLayout[]\n    pipeline: GPUPipelineLayout\n}\n\n/**\n * A system that manages the rendering of GpuPrograms.\n * @memberof rendering\n */\nexport class GpuShaderSystem implements ShaderSystem\n{\n    /** @ignore */\n    public static extension = {\n        type: [\n            ExtensionType.WebGPUSystem,\n        ],\n        name: 'shader',\n    } as const;\n\n    public maxTextures: number;\n\n    private _gpu: GPU;\n\n    private readonly _gpuProgramData: Record<number, GPUProgramData> = Object.create(null);\n\n    protected contextChange(gpu: GPU): void\n    {\n        this._gpu = gpu;\n\n        this.maxTextures = gpu.device.limits.maxSampledTexturesPerShaderStage;\n    }\n\n    public getProgramData(program: GpuProgram)\n    {\n        return this._gpuProgramData[program._layoutKey] || this._createGPUProgramData(program);\n    }\n\n    private _createGPUProgramData(program: GpuProgram)\n    {\n        const device = this._gpu.device;\n\n        const bindGroups = program.gpuLayout.map((group) => device.createBindGroupLayout({ entries: group }));\n\n        const pipelineLayoutDesc = { bindGroupLayouts: bindGroups };\n\n        this._gpuProgramData[program._layoutKey] = {\n            bindGroups,\n            pipeline: device.createPipelineLayout(pipelineLayoutDesc),\n        };\n\n        // generally we avoid having to make this automatically\n        // keeping this for a reminder, if any issues popup\n        // program._gpuLayout = {\n        //     bindGroups: null,\n        //     pipeline: 'auto',\n        // };\n\n        return this._gpuProgramData[program._layoutKey];\n    }\n\n    public destroy(): void\n    {\n        // TODO destroy the _gpuProgramData\n        this._gpu = null;\n        (this._gpuProgramData as null) = null;\n    }\n}\n"],"mappings":";;AAgBO,MAAMA,eACb;EADOC,YAAA;IAcc,KAAAC,eAAA,kBAAyDC,MAAA,CAAAC,MAAA,CAAO,IAAI;EAAA;EAE3EC,cAAcC,GACxB;IACI,KAAKC,IAAO,GAAAD,GAAA;IAEP,KAAAE,WAAA,GAAcF,GAAI,CAAAG,MAAA,CAAOC,MAAO,CAAAC,gCAAA;EAAA;EAGlCC,eAAeC,OACtB;IACI,OAAO,KAAKX,eAAgB,CAAAW,OAAA,CAAQC,UAAU,CAAK,SAAKC,qBAAA,CAAsBF,OAAO;EAAA;EAGjFE,sBAAsBF,OAC9B;IACU,MAAAJ,MAAA,GAAS,KAAKF,IAAK,CAAAE,MAAA;IAEzB,MAAMO,UAAa,GAAAH,OAAA,CAAQI,SAAU,CAAAC,GAAA,CAAKC,KAAA,IAAUV,MAAO,CAAAW,qBAAA,CAAsB;MAAEC,OAAA,EAASF;IAAM,CAAC,CAAC;IAE9F,MAAAG,kBAAA,GAAqB;MAAEC,gBAAA,EAAkBP;IAAW;IAErD,KAAAd,eAAA,CAAgBW,OAAQ,CAAAC,UAAU,CAAI;MACvCE,UAAA;MACAQ,QAAA,EAAUf,MAAO,CAAAgB,oBAAA,CAAqBH,kBAAkB;IAAA,CAC5D;IASO,YAAKpB,eAAgB,CAAAW,OAAA,CAAQC,UAAU;EAAA;EAG3CY,OACPA,CAAA;IAEI,KAAKnB,IAAO;IACX,KAAKL,eAA2B;EAAA;AAEzC;AAAA;AAzDaF,eAAA,CAGK2B,SAAY;EACtBC,IAAM,GACFC,aAAc,CAAAC,YAAA,CAClB;EACAC,IAAM;AACV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}