{"ast":null,"code":"import { getTestContext } from '../../../renderers/gl/shader/program/getTestContext.mjs';\nimport { checkMaxIfStatementsInShader } from './checkMaxIfStatementsInShader.mjs';\n\"use strict\";\nlet maxTexturesPerBatchCache = null;\nfunction getMaxTexturesPerBatch() {\n  if (maxTexturesPerBatchCache) return maxTexturesPerBatchCache;\n  const gl = getTestContext();\n  maxTexturesPerBatchCache = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n  maxTexturesPerBatchCache = checkMaxIfStatementsInShader(maxTexturesPerBatchCache, gl);\n  gl.getExtension(\"WEBGL_lose_context\")?.loseContext();\n  return maxTexturesPerBatchCache;\n}\nexport { getMaxTexturesPerBatch };","map":{"version":3,"names":["maxTexturesPerBatchCache","getMaxTexturesPerBatch","gl","getTestContext","getParameter","MAX_TEXTURE_IMAGE_UNITS","checkMaxIfStatementsInShader","getExtension","loseContext"],"sources":["/workspaces/royal-games-updated/node_modules/pixi.js/src/rendering/batcher/gl/utils/maxRecommendedTextures.ts"],"sourcesContent":["import { getTestContext } from '../../../renderers/gl/shader/program/getTestContext';\nimport { checkMaxIfStatementsInShader } from './checkMaxIfStatementsInShader';\n\nlet maxTexturesPerBatchCache: number | null = null;\n\n/**\n * Returns the maximum number of textures that can be batched. This uses WebGL1's `MAX_TEXTURE_IMAGE_UNITS`.\n * The response for this is that to get this info via WebGPU, we would need to make a context, which\n * would make this function async, and we want to avoid that.\n * @private\n * @returns {number} The maximum number of textures that can be batched\n */\nexport function getMaxTexturesPerBatch(): number\n{\n    if (maxTexturesPerBatchCache) return maxTexturesPerBatchCache;\n\n    const gl = getTestContext();\n\n    // step 1: first check max textures the GPU can handle.\n    maxTexturesPerBatchCache = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n\n    // step 2: check the maximum number of if statements the shader can have too..\n    maxTexturesPerBatchCache = checkMaxIfStatementsInShader(\n        maxTexturesPerBatchCache, gl);\n\n    gl.getExtension('WEBGL_lose_context')?.loseContext();\n\n    return maxTexturesPerBatchCache;\n}\n"],"mappings":";;;AAGA,IAAIA,wBAA0C;AASvC,SAASC,sBAChBA,CAAA;EACQ,IAAAD,wBAAA,EAAiC,OAAAA,wBAAA;EAErC,MAAME,EAAA,GAAKC,cAAe;EAGCH,wBAAA,GAAAE,EAAA,CAAGE,YAAa,CAAAF,EAAA,CAAGG,uBAAuB;EAG1CL,wBAAA,GAAAM,4BAAA,CACvBN,wBAAA,EAA0BE,EAAA,CAAE;EAE7BA,EAAA,CAAAK,YAAA,CAAa,oBAAoB,GAAGC,WAAY;EAE5C,OAAAR,wBAAA;AACX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}